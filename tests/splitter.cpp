/********************************************************************************
*                                                                               *
*                               Test Splitter Window                            *
*                                                                               *
*********************************************************************************
* Copyright (C) 1997 by Jeroen van der Zijp.   All Rights Reserved.             *
*********************************************************************************
* $Id: splitter.cpp,v 1.12 1998/09/21 18:45:55 jvz Exp $                      *
********************************************************************************/
#include "fx.h"
#include <stdio.h>
#include <stdlib.h>


// Message ids
#define ID_QUIT      1
#define ID_ZAP       2


/*******************************************************************************/

/* Generated by reswrap from file minidoc1.gif */
const unsigned char minidoc1[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf1,0x00,0x00,0xbf,0xbf,0xbf,
  0x00,0x00,0x00,0xff,0xff,0xff,0x7f,0x7f,0x7f,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,
  0x10,0x00,0x00,0x02,0x39,0x84,0x8f,0x89,0xc1,0x1d,0x7a,0x82,0x98,0x93,0x41,0x20,
  0x87,0x16,0xf2,0x29,0x49,0x71,0xcd,0x27,0x68,0x9b,0x16,0x0c,0x09,0x18,0x56,0xea,
  0x52,0x9a,0x5b,0xba,0xb6,0x14,0x0d,0xcb,0xf3,0x1b,0xd9,0x6e,0xad,0x1b,0x70,0x78,
  0x06,0x56,0x0b,0x17,0x71,0x28,0x89,0x86,0xa0,0xec,0x02,0x05,0x14,0x00,0x00,0x3b
  };

/* Generated by reswrap from file minifolderopen.gif */
const unsigned char minifolderopen[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf2,0x00,0x00,0xb2,0xc0,0xdc,
  0x00,0x00,0x00,0x7f,0x7f,0x7f,0xff,0xff,0xff,0xd9,0xd9,0xd9,0xff,0xff,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x03,
  0x42,0x08,0xba,0xdc,0x2c,0x10,0xba,0x37,0x6a,0x15,0x13,0x88,0x41,0x4a,0x27,0x43,
  0x14,0x29,0x9b,0x67,0x82,0x56,0x18,0x68,0xdc,0xe9,0x12,0x42,0x20,0xce,0x62,0x11,
  0x6f,0x69,0x1e,0xc3,0x72,0xfb,0xb9,0xb2,0x18,0xeb,0x47,0xbc,0xad,0x4a,0xc4,0x93,
  0x6c,0xc5,0x7a,0x99,0x62,0x4c,0x1a,0x2d,0xc0,0x04,0x50,0xaf,0x58,0x6c,0x66,0xcb,
  0x6d,0x24,0x00,0x00,0x3b
  };

/* Generated by reswrap from file minifolderclosed.gif */
const unsigned char minifolderclosed[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf2,0x00,0x00,0xb2,0xc0,0xdc,
  0x80,0x80,0x80,0xc0,0xc0,0xc0,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,
  0x00,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x03,
  0x3b,0x08,0xba,0xdc,0x1b,0x10,0x3a,0x16,0xc4,0xb0,0x22,0x4c,0x50,0xaf,0xcf,0x91,
  0xc4,0x15,0x64,0x69,0x92,0x01,0x31,0x7e,0xac,0x95,0x8e,0x58,0x7b,0xbd,0x41,0x21,
  0xc7,0x74,0x11,0xef,0xb3,0x5a,0xdf,0x9e,0x1c,0x6f,0x97,0x03,0xba,0x7c,0xa1,0x64,
  0x48,0x05,0x20,0x38,0x9f,0x50,0xe8,0x66,0x4a,0x75,0x24,0x00,0x00,0x3b
  };


/*******************************************************************************/


// Mini application object
class SplitterApp : public FXApp {
  FXDECLARE(SplitterApp)
public:
  long onQuit(FXObject*,FXSelector,void*);
  long onZap(FXObject*,FXSelector,void*);
protected:
  FXMainWindow*      mainwindow;
  FXMenuBar*         menubar;
  FXMenuPane*        filemenu;
  FXSplitter*        splitter;
  FXVerticalFrame*   group1;
  FXVerticalFrame*   group2;
  FXVerticalFrame*   group3;
  FXVerticalFrame*   group4;
  FXVerticalFrame*   group5;
public:
  SplitterApp();
  void create();
  void start();
  };


  
/*******************************************************************************/
  
// Map
FXDEFMAP(SplitterApp) SplitterAppMap[]={
  FXMAPFUNC(SEL_COMMAND,      ID_QUIT,      SplitterApp::onQuit),
  FXMAPFUNC(SEL_COMMAND,      ID_ZAP,       SplitterApp::onZap),
  };


// Object implementation
FXIMPLEMENT(SplitterApp,FXApp,SplitterAppMap,ARRAYNUMBER(SplitterAppMap))


// Make some windows
SplitterApp::SplitterApp(){
  FXGIFIcon *folder_open;
  FXGIFIcon *folder_closed;
  FXGIFIcon *doc;
  int i;
  
  // Folder open icon
  folder_open=new FXGIFIcon(this,minifolderopen);
  
  // Folder closed icon
  folder_closed=new FXGIFIcon(this,minifolderclosed);

  // Document icon
  doc=new FXGIFIcon(this,minidoc1);

  // Main window
  mainwindow=new FXMainWindow(this,"Group Box Test",DECOR_ALL,0,0,800,600);
  
  // Menu bar
  menubar=new FXMenuBar(mainwindow,LAYOUT_SIDE_TOP|LAYOUT_FILL_X);
  
  // File menu
  filemenu=new FXMenuPane(this);
  new FXMenuCommand(filemenu,"Quit",this,ID_QUIT,MENU_DEFAULT);
  new FXMenuTitle(menubar,"File",filemenu);
    
  // Main window interior
  splitter=new FXSplitter(mainwindow,LAYOUT_SIDE_TOP|LAYOUT_FILL_X|LAYOUT_FILL_Y|SPLITTER_REVERSED);
  group1=new FXVerticalFrame(splitter,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0);
  group2=new FXVerticalFrame(splitter,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y);
  group3=new FXVerticalFrame(splitter,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y);
  group4=new FXVerticalFrame(splitter,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y);
  group5=new FXVerticalFrame(splitter,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y);

  FXTreeList *tree=new FXTreeList(group1,NULL,0,FRAME_SUNKEN|FRAME_THICK|LAYOUT_FILL_X|LAYOUT_FILL_Y|LAYOUT_TOP|LAYOUT_RIGHT|TREELIST_SHOWS_LINES|TREELIST_SHOWS_BOXES);
  FXTreeItem *branch,*twig,*leaf,*topmost;

  topmost=tree->addItemLast(0,"Top",folder_open,folder_closed);
    tree->addItemLast(topmost,"First",doc,doc);
    tree->addItemLast(topmost,"Second",doc,doc);
    tree->addItemLast(topmost,"Third",doc,doc);
    branch=tree->addItemLast(topmost,"Fourth",folder_open,folder_closed);
      tree->addItemLast(branch,"Fourth-First",doc,doc);
      tree->addItemLast(branch,"Fourth-Second",doc,doc);
      twig=tree->addItemLast(branch,"Fourth-Third",folder_open,folder_closed);
        tree->addItemLast(twig,"Fourth-Third-First",doc,doc);
        tree->addItemLast(twig,"Fourth-Third-Second",doc,doc);
        tree->addItemLast(twig,"Fourth-Third-Third",doc,doc);
        leaf=tree->addItemLast(twig,"Fourth-Third-Fourth",folder_open,folder_closed);
          tree->addItemLast(leaf,"Fourth-Third-Fourth-First",doc,doc);
          tree->addItemLast(leaf,"Fourth-Third-Fourth-Second",doc,doc);
          tree->addItemLast(leaf,"Fourth-Third-Fourth-Third",doc,doc);
      twig=tree->addItemLast(branch,"Fourth-Fourth",folder_open,folder_closed);
        tree->addItemLast(twig,"Fourth-Fourth-First",doc,doc);
        tree->addItemLast(twig,"Fourth-Fourth-Second",doc,doc);
        tree->addItemLast(twig,"Fourth-Fourth-Third",doc,doc);
        for(i=0; i<10; i++){
          char name[50];
          sprintf(name,"%09d",i);
          tree->addItemLast(twig,name,doc,doc);
          }
      twig=tree->addItemLast(branch,"Fourth-Fifth",folder_open,folder_closed);
        tree->addItemLast(twig,"Fourth-Fifth-First",doc,doc);
        tree->addItemLast(twig,"Fourth-Fifth-Second",doc,doc);
        tree->addItemLast(twig,"Fourth-Fifth-Third",doc,doc);
        for(i=0; i<10; i++){
          char name[50];
          sprintf(name,"%09d",i);
          tree->addItemLast(twig,name,doc,doc);
          }
    tree->addItemLast(topmost,"Fifth",doc,doc);
    tree->addItemLast(topmost,"Sixth",doc,doc);
    branch=tree->addItemLast(topmost,"Seventh",folder_open,folder_closed);
      tree->addItemLast(branch,"Seventh-First",doc,doc);
      tree->addItemLast(branch,"Seventh-Second",doc,doc);
      tree->addItemLast(branch,"Seventh-Third",doc,doc);
    tree->addItemLast(topmost,"Eighth",doc,doc);
    
  
  new FXLabel(group2,"Text Label");
  new FXButton(group2,"Drukknop\tGereedschap tipje\tHulp voor status regel.");
  new FXButton(group2,"Button\tTooltip\tHelp for status.");

  new FXLabel(group3,"Tekstje");
  new FXButton(group3,"Knopje");
  
  new FXButton(group4,"Drukknop\tGereedschap tipje\tHulp voor status regel.");
  new FXButton(group4,"Button\tTooltip\tHelp for status.");

  new FXLabel(group5,"Tekstje");
  new FXButton(group5,"Drukknop\tGereedschap tipje\tHulp voor status regel.");
  new FXButton(group5,"Button\tTooltip\tHelp for status.");

  new FXButton(group5,"Remove all but one group",NULL,this,ID_ZAP,FRAME_RAISED|FRAME_THICK);
  
  // Make a tool tip
  new FXTooltip(this,0);
  }
  

// Handle quitting
long SplitterApp::onQuit(FXObject*,FXSelector,void*){
//   if(MBOX_CLICKED_YES==showModalQuestionBox(MBOX_YES_NO,"Quiting Splitter Application","Do you really want to quit the Splitter Application?")){
    exit(0);
//     }
  return 1;
  }


// Zap
long SplitterApp::onZap(FXObject*,FXSelector,void*){
  delete group2;
  delete group3;
  delete group4;
  delete group5;
  return 1;
  }


void SplitterApp::create(){
  FXApp::create();
  }


// Start
void SplitterApp::start(){
  create();
  mainwindow->show();
  run();
  }


/*******************************************************************************/


// Start the whole thing
int main(int argc,char *argv[]){
  SplitterApp* application=new SplitterApp;
  application->init(argc,argv);
  application->start();
  }


